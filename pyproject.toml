[build-system]
requires = ["setuptools>=61.0", "setuptools-scm","wheel","gitchangelog"]
build-backend = "setuptools.build_meta"

[tool.poetry]
name = "poc_shiny"
version = "0.0.1"
description = "My shiny POC"
authors = ["My shiny POC"]

[project]
name = "poc_shiny"
version = "0.0.1"
authors = [{name = "My shiny POC"}]

description =  "My shiny POC"
readme = "README.md"
keywords = ["python"]
classifiers = [
	"Development Status :: 1 - Planning",
	"Intended Audience :: Developers",
	"Programming Language :: Python :: 3",
	"Operating System :: Unix",
	"Operating System :: MacOS :: MacOS X",
	"Operating System :: Microsoft :: Windows",
]

# Environment settings
requires-python = ">=3.11"
[tool.poetry.dependencies]
python = "^3.11"

click = "8.1.7"
shiny = "1.2.0"
shinywidgets = "0.3.4"
configparser = "*"
pandas = "2.2.2"
polars = "0.20.31"
geopandas = "0.14.4"
plotly = "5.24.0"
palmerpenguins = "0.1.4"
lonboard = "0.9.3"
python-dotenv = "1.0.1"
google-auth = "2.34.0"
google-auth-oauthlib = "1.2.1"
google-auth-httplib2 = "0.2.0"
google-cloud-storage = "2.18.2"
pyarrow = "17.0.0"
gcsfs = "2024.10.0"
ipyleaflet = "0.18.2"
ipywidgets = "8.1.5"


[project.optional-dependencies]
dev = [
	"pre-commit==3.3.1",
	"pytest",
	"pytest-cov",
	"pytest-mock",
	"black==22.8.0",
	"ruff==0.0.257",
	"mypy",
	
	]

# Linter settings
[tool.ruff]
select = ["F",
	  "E",
	  "I",
	  "Q",
	  "W",
	  "UP",
	  # "SIM",
	  # "PTH",
	  # "RET",
	 ]
ignore = ["E722"]
line-length = 120
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Code formatter
[tool.black]
line-length = 120
preview = true

# Tests
[tool.coverage.run]
omit = []
[tool.pytest.ini_options]
addopts = "--cov --cov-report html --cov-report term-missing --cov-fail-under 5"

# Type checking
[tool.mypy]
# Specify the Python version you are using
python_version = "3.10"
# avoid folder
# Exclude specific files or directories from type checking
# Example:
# exclude = ["tests"]
exclude = ["tests","build","venv"]
disallow_untyped_defs = false
warn_unused_ignores = true
warn_unused_configs = true
warn_no_return = true
warn_return_any = false
warn_unreachable = true
show_error_codes = true
pretty = true

